_package user
$

def_slotted_exemplar(
	:xsd_loader_test,
	{},
	{:test_case})
$

_pragma(classify_level=base, topic={xsd_loader})
_private _method xsd_loader_test.fixture_path(p_filename)
	module_name << _self.module_name
	module << sw_module_manager.module(module_name)
	_return module.get_resource_file(p_filename, "data/fixtures")
_endmethod
$

_pragma(classify_level=unit_test, topic={xsd_loader})
_method xsd_loader_test.set_up()
	def_package(:xsd_loader_test)
_endmethod
$

_pragma(classify_level=unit_test, topic={xsd_loader})
_method xsd_loader_test.tear_down()
	package.all_packages.remove_key(:xsd_loader_test)
_endmethod
$

_pragma(classify_level=unit_test, topic={xsd_loader})
_method xsd_loader_test.test_simple_type_definition_1()
	filename << _self.fixture_path("simple_type_definition_1.xsd")
	loader << xsd_loader:xsd_loader_factory.generate_loader(filename, :target_package, :xsd_loader_test)
	filename << _self.fixture_path("simple_type_definition_1.xml")
	obj << loader.load_xml_from_file(filename)
	
	_self.assert(obj, :|~=|, _unset)
_endmethod
$

_pragma(classify_level=unit_test, topic={xsd_loader})
_method xsd_loader_test.test_complex_type_definition_1()
	filename << _self.fixture_path("complex_type_definition_1.xsd")
	loader << xsd_loader:xsd_loader_factory.generate_loader(filename, :target_package, :xsd_loader_test)
	filename << _self.fixture_path("complex_type_definition_1.xml")
	obj << loader.load_xml_from_file(filename)
	
	_self.assert(obj, :|~=|, _unset)
_endmethod
$

_pragma(classify_level=unit_test, topic={xsd_loader})
_method xsd_loader_test.test_complex_type_definition_2()
	filename << _self.fixture_path("complex_type_definition_2.xsd")
	loader << xsd_loader:xsd_loader_factory.generate_loader(filename, :target_package, :xsd_loader_test)
	filename << _self.fixture_path("complex_type_definition_2.xml")
	obj << loader.load_xml_from_file(filename)
	
	_self.assert(obj, :|~=|, _unset)
	_self.assert(obj.e1, :|=|, "test_element")
_endmethod
$

_pragma(classify_level=unit_test, topic={xsd_loader})
_method xsd_loader_test.test_complex_type_definition_3()
	filename << _self.fixture_path("complex_type_definition_3.xsd")
	loader << xsd_loader:xsd_loader_factory.generate_loader(filename, :target_package, :xsd_loader_test)
	filename << _self.fixture_path("complex_type_definition_3.xml")
	obj << loader.load_xml_from_file(filename)
	
	_self.assert(obj, :|~=|, _unset)
	_self.assert(obj.e1, :|=|, "test_element")
_endmethod
$
